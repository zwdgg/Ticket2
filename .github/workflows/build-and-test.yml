name: Build and Test on Commit

on:
  push:
    branches:
      - gh-actions-test

jobs:
  build:

    name: "${{ matrix.bot }} (${{ matrix.dart-version }}/${{ matrix.code-version }}/${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      #fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [windows-latest]
        node-version: [10]
        #dart-version: [stable, dev]
        dart-version: [stable]
        code-version: [stable]
        #bot: [flutter_debug, flutter_test_debug, flutter_web_debug, flutter_repo, dart_debug, dart, flutter, misc]
        bot: [flutter_repo]
        include:
          - dart-version: stable
            flutter-version: stable
          - dart-version: dev
            flutter-version: dev
        # Temporarily exclude macOS from VS Code Stable due to
        # https://github.com/microsoft/vscode/issues/82676
        exclude:
          - os: macOS-latest
            code-version: stable

    steps:

      - uses: actions/checkout@v1

      - name: Setup XVFB
        if: matrix.os == 'ubuntu-latest'
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Setup Chrome
        if: matrix.os == 'macOS-latest'
        run: brew update && brew cask install google-chrome
        
      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Dart ${{ matrix.dart-version }}
        uses: DanTup/gh-actions/setup-dart@master
        with:
          channel: ${{ matrix.dart-version }}

      - name: Setup Flutter ${{ matrix.flutter-version }}
        id: flutter
        if: "!startsWith(matrix.bot, 'dart')"
        uses: DanTup/gh-actions/setup-flutter@master
        with:
          channel: ${{ matrix.flutter-version }}
      
      - run: flutter update-packages
        if: matrix.bot == 'flutter_repo'

      - name: Print Dart version
        run: dart --version

      - name: Print Flutter version
        if: "!startsWith(matrix.bot, 'dart')"
        run: flutter --version

      - run: |
          pub global activate --no-executables devtools
          pub global activate --no-executables webdev
          pub global activate --no-executables stagehand
          pub global activate --no-executables args 1.5.0
          pub global activate --no-executables meta 1.1.6
          pub global activate --no-executables pedantic 1.4.0
          pub global activate --no-executables json_annotation 1.2.0
        shell: pwsh

      - name: npm ci
        #continue-on-error: false
        run: |
          npm ci

      - name: npm lint and build
        continue-on-error: false
        run: |
          npm run lint
          npm run build    
        shell: bash
        
      - name: npm test
        run: |
          npm test
        env:
          CI: true
          ELECTRON_NO_ATTACH_CONSOLE: 1
          DISPLAY: ":99.0"
          BOT: ${{ matrix.bot }}
          CODE_VERSION: ${{ matrix.code-version }}
          LOGS_NAME: ${{ matrix.dart-version }}_${{ matrix.code-version }}
          FLUTTER_REPO_PATH: ${{ steps.flutter.outputs.flutter-sdk }}
